// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grade.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Grade struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Num                  uint64   `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	Date                 string   `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Coeff                int32    `protobuf:"varint,4,opt,name=coeff,proto3" json:"coeff,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Grade) Reset()         { *m = Grade{} }
func (m *Grade) String() string { return proto.CompactTextString(m) }
func (*Grade) ProtoMessage()    {}
func (*Grade) Descriptor() ([]byte, []int) {
	return fileDescriptor_17edf7abefd5136a, []int{0}
}

func (m *Grade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Grade.Unmarshal(m, b)
}
func (m *Grade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Grade.Marshal(b, m, deterministic)
}
func (m *Grade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Grade.Merge(m, src)
}
func (m *Grade) XXX_Size() int {
	return xxx_messageInfo_Grade.Size(m)
}
func (m *Grade) XXX_DiscardUnknown() {
	xxx_messageInfo_Grade.DiscardUnknown(m)
}

var xxx_messageInfo_Grade proto.InternalMessageInfo

func (m *Grade) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Grade) GetNum() uint64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *Grade) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Grade) GetCoeff() int32 {
	if m != nil {
		return m.Coeff
	}
	return 0
}

type ID struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_17edf7abefd5136a, []int{1}
}

func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (m *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(m, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Date struct {
	Date                 string   `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Date) Reset()         { *m = Date{} }
func (m *Date) String() string { return proto.CompactTextString(m) }
func (*Date) ProtoMessage()    {}
func (*Date) Descriptor() ([]byte, []int) {
	return fileDescriptor_17edf7abefd5136a, []int{2}
}

func (m *Date) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Date.Unmarshal(m, b)
}
func (m *Date) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Date.Marshal(b, m, deterministic)
}
func (m *Date) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Date.Merge(m, src)
}
func (m *Date) XXX_Size() int {
	return xxx_messageInfo_Date.Size(m)
}
func (m *Date) XXX_DiscardUnknown() {
	xxx_messageInfo_Date.DiscardUnknown(m)
}

var xxx_messageInfo_Date proto.InternalMessageInfo

func (m *Date) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func init() {
	proto.RegisterType((*Grade)(nil), "api.Grade")
	proto.RegisterType((*ID)(nil), "api.ID")
	proto.RegisterType((*Date)(nil), "api.Date")
}

func init() { proto.RegisterFile("grade.proto", fileDescriptor_17edf7abefd5136a) }

var fileDescriptor_17edf7abefd5136a = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x8f, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x85, 0x99, 0xfc, 0xf4, 0xe7, 0x2a, 0x22, 0x97, 0x22, 0x21, 0x2e, 0x0c, 0xd9, 0x98, 0x4d,
	0xa7, 0xa2, 0x4f, 0x20, 0xa4, 0x94, 0x80, 0xab, 0xf8, 0x04, 0xa9, 0x73, 0x13, 0x06, 0xda, 0xce,
	0xd0, 0x4e, 0x17, 0xbe, 0xad, 0x8f, 0x22, 0x73, 0x43, 0x68, 0x10, 0x84, 0xee, 0x6e, 0x0e, 0xe7,
	0xfb, 0x32, 0x07, 0x6e, 0xba, 0x63, 0xa3, 0x48, 0xda, 0xa3, 0x71, 0x06, 0xc3, 0xc6, 0xea, 0xf4,
	0xb1, 0x33, 0xa6, 0xdb, 0xd1, 0x8a, 0xa3, 0xed, 0xb9, 0x5d, 0xd1, 0xde, 0xba, 0xef, 0xbe, 0x91,
	0x7f, 0x42, 0xbc, 0xf1, 0x00, 0xde, 0x41, 0xa0, 0x55, 0x22, 0x32, 0x51, 0x44, 0x75, 0xa0, 0x15,
	0xde, 0x43, 0x78, 0x38, 0xef, 0x93, 0x80, 0x03, 0x7f, 0x22, 0x42, 0xa4, 0x1a, 0x47, 0x49, 0x98,
	0x89, 0x62, 0x5e, 0xf3, 0x8d, 0x0b, 0x88, 0xbf, 0x0c, 0xb5, 0x6d, 0x12, 0x65, 0xa2, 0x88, 0xeb,
	0xfe, 0x23, 0x5f, 0x40, 0x50, 0x95, 0x7f, 0x8d, 0x79, 0x0a, 0x51, 0xe9, 0x99, 0xc1, 0x23, 0x2e,
	0x9e, 0xd7, 0x1f, 0x01, 0x13, 0x7e, 0xc7, 0x09, 0x97, 0x30, 0x7d, 0x57, 0xaa, 0x3a, 0xb4, 0x06,
	0x41, 0x36, 0x56, 0x4b, 0xce, 0xd3, 0x07, 0xd9, 0xcf, 0x90, 0xc3, 0x0c, 0xb9, 0xf6, 0x33, 0x50,
	0xc2, 0x6c, 0xad, 0xb4, 0xbb, 0xba, 0xbf, 0x04, 0x28, 0x69, 0x47, 0x8e, 0x98, 0x98, 0x32, 0x51,
	0x95, 0xff, 0xd6, 0x9f, 0xe1, 0x76, 0x43, 0x8e, 0x95, 0x1f, 0xfa, 0xe4, 0x70, 0xce, 0x80, 0xdf,
	0x91, 0x8e, 0xfe, 0xf6, 0x22, 0xf0, 0x09, 0x66, 0x43, 0xf1, 0x62, 0x1d, 0x55, 0xb6, 0x13, 0x36,
	0xbf, 0xfd, 0x06, 0x00, 0x00, 0xff, 0xff, 0x75, 0x89, 0xb4, 0xb8, 0xa1, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GradesClient is the client API for Grades service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GradesClient interface {
	AddInfo(ctx context.Context, in *Grade, opts ...grpc.CallOption) (*empty.Empty, error)
	EditInfo(ctx context.Context, in *Grade, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteInfo(ctx context.Context, in *ID, opts ...grpc.CallOption) (*empty.Empty, error)
	GetGradeList(ctx context.Context, in *Date, opts ...grpc.CallOption) (Grades_GetGradeListClient, error)
	GetGrade(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Grade, error)
}

type gradesClient struct {
	cc *grpc.ClientConn
}

func NewGradesClient(cc *grpc.ClientConn) GradesClient {
	return &gradesClient{cc}
}

func (c *gradesClient) AddInfo(ctx context.Context, in *Grade, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.Grades/AddInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gradesClient) EditInfo(ctx context.Context, in *Grade, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.Grades/EditInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gradesClient) DeleteInfo(ctx context.Context, in *ID, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.Grades/DeleteInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gradesClient) GetGradeList(ctx context.Context, in *Date, opts ...grpc.CallOption) (Grades_GetGradeListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Grades_serviceDesc.Streams[0], "/api.Grades/GetGradeList", opts...)
	if err != nil {
		return nil, err
	}
	x := &gradesGetGradeListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Grades_GetGradeListClient interface {
	Recv() (*Grade, error)
	grpc.ClientStream
}

type gradesGetGradeListClient struct {
	grpc.ClientStream
}

func (x *gradesGetGradeListClient) Recv() (*Grade, error) {
	m := new(Grade)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gradesClient) GetGrade(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Grade, error) {
	out := new(Grade)
	err := c.cc.Invoke(ctx, "/api.Grades/GetGrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GradesServer is the server API for Grades service.
type GradesServer interface {
	AddInfo(context.Context, *Grade) (*empty.Empty, error)
	EditInfo(context.Context, *Grade) (*empty.Empty, error)
	DeleteInfo(context.Context, *ID) (*empty.Empty, error)
	GetGradeList(*Date, Grades_GetGradeListServer) error
	GetGrade(context.Context, *ID) (*Grade, error)
}

// UnimplementedGradesServer can be embedded to have forward compatible implementations.
type UnimplementedGradesServer struct {
}

func (*UnimplementedGradesServer) AddInfo(ctx context.Context, req *Grade) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddInfo not implemented")
}
func (*UnimplementedGradesServer) EditInfo(ctx context.Context, req *Grade) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditInfo not implemented")
}
func (*UnimplementedGradesServer) DeleteInfo(ctx context.Context, req *ID) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteInfo not implemented")
}
func (*UnimplementedGradesServer) GetGradeList(req *Date, srv Grades_GetGradeListServer) error {
	return status.Errorf(codes.Unimplemented, "method GetGradeList not implemented")
}
func (*UnimplementedGradesServer) GetGrade(ctx context.Context, req *ID) (*Grade, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGrade not implemented")
}

func RegisterGradesServer(s *grpc.Server, srv GradesServer) {
	s.RegisterService(&_Grades_serviceDesc, srv)
}

func _Grades_AddInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Grade)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GradesServer).AddInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Grades/AddInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GradesServer).AddInfo(ctx, req.(*Grade))
	}
	return interceptor(ctx, in, info, handler)
}

func _Grades_EditInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Grade)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GradesServer).EditInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Grades/EditInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GradesServer).EditInfo(ctx, req.(*Grade))
	}
	return interceptor(ctx, in, info, handler)
}

func _Grades_DeleteInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GradesServer).DeleteInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Grades/DeleteInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GradesServer).DeleteInfo(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Grades_GetGradeList_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Date)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GradesServer).GetGradeList(m, &gradesGetGradeListServer{stream})
}

type Grades_GetGradeListServer interface {
	Send(*Grade) error
	grpc.ServerStream
}

type gradesGetGradeListServer struct {
	grpc.ServerStream
}

func (x *gradesGetGradeListServer) Send(m *Grade) error {
	return x.ServerStream.SendMsg(m)
}

func _Grades_GetGrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GradesServer).GetGrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Grades/GetGrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GradesServer).GetGrade(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _Grades_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Grades",
	HandlerType: (*GradesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddInfo",
			Handler:    _Grades_AddInfo_Handler,
		},
		{
			MethodName: "EditInfo",
			Handler:    _Grades_EditInfo_Handler,
		},
		{
			MethodName: "DeleteInfo",
			Handler:    _Grades_DeleteInfo_Handler,
		},
		{
			MethodName: "GetGrade",
			Handler:    _Grades_GetGrade_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetGradeList",
			Handler:       _Grades_GetGradeList_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grade.proto",
}
